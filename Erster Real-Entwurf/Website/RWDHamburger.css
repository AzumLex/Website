/* Anmerkung: ich hatte meine Navigationsleiste fertig und war zufrieden. Aber leider war sie nicht für RWD ausgelegt und nur für die Desktopansicht. Ich hab daher lang gesucht und nach einiger Zeit diese Lösung hier gefunden, die eine 
ohne Javascript funktioniert und dennoch schön aussieht und funktionabel ist. So funktioniert die Ansicht auf allen Geräten und es kommt nicht zu Anschauungsproblemen. Ich hab den Code dann noch für mich selber kommentiert, um es später noch zu verstehen */

*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
body {
    font-family: 'Arial', sans-serif;
    --color1: #FFF ;        /* so können wir eine Farbe in einer Variable speichern */
    --color2: #000000 ;
}
.nav-bar {          /* die Nav-bar ist unsere Menü am oberen Bereich der Website */
    width: 100%;
    height: 8vh;    /* vh steht für viewport-height, also eine relative Größe, abhängig vom viewport des Nutzers.  */
    display: flex;
    justify-content: space-between;
    align-items: center;
    list-style: none;
    position: relative;
    background-color: var(--color2);        /* --color2 ist eine Variable, in der wir die Farbe gespeichert haben */
    padding: 12px 20px;
}

/* Das Menü ist das Fenster, das von rechts herausfährt, sobald wir auf die drei Striche klicken*/
.menu {display: flex;}
.menu li {padding-left: 30px;}              /* Abstand der Elemente des Menüs zum linken Rand. Die Zeile ist für uns eigentlich redundant, weil wir nur Links gespeichert haben. Wäre aber wichtig, wenn man noch ein anderes Element hinzufügen will, das kein Link ist. */
.menu li a {                                /* li bezieht sich auf die Listenelemente, durch das a sprechen wir explizit die Links an */
    display: block;                         /* block verwenden wir, wenn wir eine ganze Zeile über die volle Breite ausfüllen wollen. Inline block nehmen wir dann, wenn wir mehrere Elemente nebeneinander positionieren wollen würden und außerdem deren Größe verändern wollen. */
    text-decoration: none;
    color: var(--color1);
    text-align: center;
    transition: 15s ease-in-out;          /* Zeit, die Elemente zum */
    position: relative;
    text-transform: uppercase;
}
.menu li a::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 1px;
    background-color: var(--color1);
    transition: 0.1s ease-in-out;
}
.menu li a:hover:after {width: 50%;}
.open-menu , .close-menu {
    position: absolute;
    color: var(--color1);
    cursor: pointer;
    font-size: 1.5rem;
    display: none;
}
.open-menu {
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
}
.close-menu {
    top: 20px;
    right: 20px;
}
#check {display: none;}


@media screen and (max-width: 610px){                       /* Die folgenden Zeilen gelten nur, wenn die Bildschirmweite unter 610 px ist (zB Smartphones) */

    .menu {                                     /* das Menü wird ausgefahren */
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 80%;
        height: 100vh;
        position: fixed;
        top: 0;
        right: -100%;
        z-index: 100;
        background-color: var(--color2);
        transition: all 0.5s ease-in-out;             /* Zeit, die das Menü zum Herausfahren benötigt. Ease-in-out bedeutet, dass der Übergang am Anfang und am Ende schneller, in der Mitte jedoch langsamer ist */
    }
    .menu li {margin-top: 40px;}
    .menu li a {padding: 10px;}
    .open-menu , .close-menu {display: block;}
    #check:checked ~ .menu {right: 0;}
   
    .nav-bar{                                   /* Die Höhe der Nav Bar nochmal festlegen (ohne würde sie kleiner werden) */
        height: 8vh;
    }
}
